[versions]
agp = "8.11.0"
android-compileSdk = "35"
android-minSdk = "24"
android-targetSdk = "35"
androidx-activity = "1.10.1"
# androidx-appcompat = "1.7.1"
# androidx-constraintlayout = "2.2.1"
# androidx-core = "1.16.0"
# androidx-espresso = "3.6.1"
androidx-lifecycle = "2.9.1"
# androidx-testExt = "1.2.1"
composeHotReload = "1.0.0-beta03"
composeMultiplatform = "1.8.2"
# junit = "4.13.2"
kotlin = "2.2.0"
kotlinx-coroutines = "1.10.2"

koin = "4.1.0"
koinComposeMultiplatform = "4.1.0"
# navigationCompose = "2.8.0-alpha13"
lifecycleViewModel = "2.9.1"
# kotlinSerialization = "1.7.3"
multiplatformSettings = "1.3.0"

assertk = "0.28.1"
# coreKtx = "1.6.1"
# composeTest = "1.6.8"

kotlinSerialization = "1.7.3"
navigationCompose = "2.8.0-alpha10"

[libraries]
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
# kotlin-testJunit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin" }
# junit = { module = "junit:junit", version.ref = "junit" }
# androidx-core-ktx = { module = "androidx.core:core-ktx", version.ref = "androidx-core" }
# androidx-testExt-junit = { module = "androidx.test.ext:junit", version.ref = "androidx-testExt" }
# androidx-espresso-core = { module = "androidx.test.espresso:espresso-core", version.ref = "androidx-espresso" }
# androidx-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "androidx-appcompat" }
# androidx-constraintlayout = { module = "androidx.constraintlayout:constraintlayout", version.ref = "androidx-constraintlayout" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activity" }
androidx-lifecycle-viewmodel = { module = "org.jetbrains.androidx.lifecycle:lifecycle-viewmodel", version.ref = "androidx-lifecycle" }
androidx-lifecycle-runtimeCompose = { module = "org.jetbrains.androidx.lifecycle:lifecycle-runtime-compose", version.ref = "androidx-lifecycle" }
kotlinx-coroutinesSwing = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-swing", version.ref = "kotlinx-coroutines" }
lifecycle-viewmodel = { module = "androidx.lifecycle:lifecycle-viewmodel", version.ref = "lifecycleViewModel"}

koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin" }
# koin-androidx-compose = { module = "io.insert-koin:koin-androidx-compose", version.ref = "koin" }
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-compose = { module = "io.insert-koin:koin-compose", version.ref = "koinComposeMultiplatform" }
koin-compose-viewmodel = { module = "io.insert-koin:koin-compose-viewmodel", version.ref = "koinComposeMultiplatform" }
# navigation-compose = { module = "org.jetbrains.androidx.navigation:navigation-compose", version.ref = "navigationCompose" }
# kotlinx-serialization-json = { group = "org.jetbrains.kotlinx", name = "kotlinx-serialization-json", version.ref = "kotlinSerialization" }

multiplatform-settings = {module = "com.russhwolf:multiplatform-settings-no-arg", version.ref = "multiplatformSettings" }
# implementation("com.russhwolf:multiplatform-settings-no-arg:1.3.0")
kotlinx-serialization-json = { group = "org.jetbrains.kotlinx", name = "kotlinx-serialization-json", version.ref = "kotlinSerialization" }
jetbrains-compose-navigation = { group = "org.jetbrains.androidx.navigation", name = "navigation-compose", version.ref= "navigationCompose"}

assertk = { module = "com.willowtreeapps.assertk:assertk", version.ref = "assertk" }
# compose-ui-test-junit4-android = { module = "androidx.compose.ui:ui-test-junit4-android", version.ref = "composeTest" }
# compose-ui-test-manifest = { module = "androidx.compose.ui:ui-test-manifest", version.ref = "composeTest" }
# core-ktx = { group = "androidx.test", name = "core-ktx", version.ref = "coreKtx" }

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
composeHotReload = { id = "org.jetbrains.compose.hot-reload", version.ref = "composeHotReload" }
composeMultiplatform = { id = "org.jetbrains.compose", version.ref = "composeMultiplatform" }
composeCompiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
jetbrains-kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
#  android-application = { id = "com.android.application", version.ref = "agp" }
kotlin-compose = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }